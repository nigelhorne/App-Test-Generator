# Run this through https://github.com/nigelhorne/App-Test-Generator

our $module   = 'Math::Simple';
our $function = 'add';

# --- Inputs: two integers ---
our %input = (
	a => { type => 'integer' },
	b => { type => 'integer' },
);

# --- Expected output type ---
our %output = (
	type => 'integer',
);

# --- Static Perl corpus (expected => [ args... ]) ---
our %cases = (
	'3'	 => [1, 2],
	'0'	 => [0, 0],
	'-1'	=> [-2, 1],
	'_STATUS:DIES'  => [ 'a', 'b' ],	 # non-numeric args should die
	'_STATUS:WARNS' => [ undef, undef ], # undef args should warn
);

# --- YAML corpus with more examples ---
our $yaml_cases = 'examples/math_simple_add.yml';

# --- Fuzzing settings ---
our $iterations = 100;
our $seed	   = 42;

# --- Edge cases by parameter name ---
our %edge_cases = (
	a => [ 0, -9999, 2**31-1 ],
	b => [ 0, 9999, -(2**31) ],
);

# --- Type-wide edge cases ---
our %type_edge_cases = (
	integer => [ undef, '', 'NaN', 3.14159 ],
);
