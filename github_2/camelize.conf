use utf8;

# camelize.conf
# Что тестируем
our $module   = 'Util';
our $function = 'camelize';

# Сигнатура: один строковый аргумент
# our %input  = ( str => { type => 'string' } );
our %input = ( type => 'string' );
our %output = ( type => 'string' );

# Статические кейсы (ожидаемое => [аргументы...])
# Maps output
our %cases = (
	'Bar' => {
		'input' => ['bar'],                     # простая капитализация
		_STATUS => 'OK'
	}, 'FooBar' => {
		'input' => ['foo_bar'],                 # snake_case -> CamelCase
		_STATUS => 'OK'
	}, 'FooBar::BazQux' => {
		'input' => ['foo_bar-baz_qux'],         # "-" -> "::"
		_STATUS => 'OK'
	}, 'Foo' => {
		'input' => ['f_o_o'],                   # группировка односимвольных 'слов'
		_STATUS => 'OK'
	}, '' => {
		'input' => [''],                        # пустая строка
		_STATUS => 'OK'
	}, 'Тест' => {
		'input' => ['тест'],                    # Unicode (кириллица)
		_STATUS => 'OK'
	}, 'Foo-Bar' => {
		'input' => ['Foo-Bar'],                 # уже с заглавной — не трогаем
		_STATUS => 'OK'
	}, 'Foo2Bar3::Baz10' => {
		'input' => ['foo2_bar3-baz10'],         # цифры внутри токенов
		_STATUS => 'OK'
	}
);

# Дополнительный корпус (опционально)
our $yaml_cases = 'github_2/corpus-camelize.yml';

# Повторяемость и объём фаззинга
our $seed       = 424242;
our $iterations = 120;

# Точечные "острые" значения для поля str
# our %edge_cases = (
    # str => [
      # '-', '_', '::', 'f__o', 'foo__bar-baz', 'foo-bar__baz', " \t ",
      # "éclair", "Σίσυφος",                           # латиница с диакритикой / греческий
    # ],
# );

our @edge_case_array = (
      '-', '_', '::', 'f__o', 'foo__bar-baz', 'foo-bar__baz', " \t ",
      "éclair", "Σίσυφος",                           # латиница с диакритикой / греческий
);

# Типовые edge-кейсы для всех string
our %type_edge_cases = (
  string => [ '', "\n", "\0", ('x' x 1024) ]
);

our %config = (
	'test_nuls' => 0,
	'test_undef' => 0,
);
